rules_version = '2';
service cloud.firestore {
    //========================================================
    // @memo
    // - read
    // 他人にreadされてはいけないクローズドな情報にはしっかりとセキュリティを書く
    // -------------------------------------------------------
    // - write
    // writeは原則使用禁止 cerate / update / deleteを書き分ける
    //========================================================
		match /databases/{database}/documents {

    //======================================
    // function
    //======================================
  	// @func ログインしているかどうか
    function isAuth() {
      return request.auth.uid != null
    }

    // @func リクエストしているuidを返す
    function authUid() {
      return request.auth.uid;
		}

    // @func 更新が期待される未来のフィールドを返す */
    function reqResourceData() {
      return request.resource.data;
    }

    // @func 現在の存在するフィールドを返す
    function resourceData() {
      return resource.data;
    }

    // @func postの本文の文字数制限をする
    function validPostData(postBody, maxNum) {
      return postBody.size() <= maxNum
    }

    //======================================
    // matchPath
    //======================================
    // @path profiles
    match /profiles/{version} {
      match /users/{userId} {
        allow read;
        allow create: if isAuth() && authUid() == reqResourceData().uid;
        allow update, delete: if authUid() == userId;
      }
    }

    // @path posts
    match /posts/{version} {
      match /users/{postId} {
        allow read;
        allow create: if isAuth() && authUid() == reqResourceData().authorId && validPostData(reqResourceData().postBody, 10);
        allow update, delete: if authUid() == resourceData().authorId;
      }
    }

    // @path following
    match /followings/{version} {
      match /users/{userId} {
        match /userFollowings/{followingsId} {
          allow read;
          allow create, delete: if isAuth() && authUid() == userId;
        }
      }
    }

    // @path social - followers
    match /{path=**}/followers/{followersId} {
      allow read; // create, update, delete to cloud functions
    }

    // @path social - followings
    match /{path=**}/followings/{followingsId} {
      allow read; // create, update, delete to cloud functions
    }
  }
}
